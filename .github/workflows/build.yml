name: Build and Test

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    env:
      Solution_Name: LineCallSoundChanger.sln
      Project_Path: LineCallSoundChanger/LineCallSoundChanger.csproj
      Configuration: Release

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Required for GitVersion
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.Solution_Name }}
      
    - name: Build
      run: dotnet build ${{ env.Solution_Name }} --configuration ${{ env.Configuration }} --no-restore
      
    - name: Test
      run: dotnet test ${{ env.Solution_Name }} --configuration ${{ env.Configuration }} --no-build --verbosity normal
      
    - name: Determine version (beta)
      if: github.ref == 'refs/heads/develop'
      id: version_beta
      run: |
        $buildNumber = "$(Get-Date -Format "yyMMdd").${{ github.run_number }}"
        echo "BUILD_NUMBER=$buildNumber" >> $env:GITHUB_ENV
        echo "IS_BETA=true" >> $env:GITHUB_ENV
        echo "VERSION=1.0.0-beta.$buildNumber" >> $env:GITHUB_ENV
      shell: pwsh
      
    - name: Determine version (release candidate)
      if: github.ref == 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/v')
      id: version_rc
      run: |
        $buildNumber = "$(Get-Date -Format "yyMMdd").${{ github.run_number }}"
        echo "BUILD_NUMBER=$buildNumber" >> $env:GITHUB_ENV
        echo "IS_BETA=false" >> $env:GITHUB_ENV
        echo "VERSION=1.0.0-rc.$buildNumber" >> $env:GITHUB_ENV
      shell: pwsh
      
    - name: Publish Windows App
      if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
      run: |
        dotnet publish ${{ env.Project_Path }} `
          --configuration ${{ env.Configuration }} `
          --runtime win-x64 `
          --self-contained true `
          -p:PublishSingleFile=true `
          -p:IncludeNativeLibrariesForSelfExtract=true `
          -p:PublishReadyToRun=true `
          -p:DebugType=embedded `
          -p:VersionPrefix=1.0.0 `
          -p:VersionSuffix=${{ env.IS_BETA == 'true' && format('beta.{0}', env.BUILD_NUMBER) || format('rc.{0}', env.BUILD_NUMBER) }} `
          -p:IsBeta=${{ env.IS_BETA }} `
          -p:BuildNumber=${{ env.BUILD_NUMBER }} `
          --output ./publish
      shell: pwsh
      
    - name: Create ZIP artifact
      if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
      run: |
        $releaseName = "${{ env.IS_BETA == 'true' && 'LineCallSoundChanger-beta' || 'LineCallSoundChanger-rc' }}"
        $zipFileName = "$releaseName-${{ env.VERSION }}.zip"
        Compress-Archive -Path ./publish/* -DestinationPath ./$zipFileName
      shell: pwsh
      
    - name: Upload build artifacts
      if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.IS_BETA == 'true' && 'LineCallSoundChanger-beta' || 'LineCallSoundChanger-rc' }}
        path: |
          ./publish/LineCallSoundChanger.exe
          ./*.zip
